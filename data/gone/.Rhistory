mu <- 1.4e-9
g <- 2
#Run "psmc.result" from the "plot_psmc" function
boot <- lapply(boot_files, psmc.result, i.iteration, mu = mu, s, g = g)
#Set names in psmc_buf to sample names
dataset_names_boot <-list.files(path="/Users/abc6435/Desktop/hWROH/data/psmc_bootstrap/", pattern="*round*")
dataset_names_boot <-  gsub(".psmc", "", dataset_names_boot)
names(boot) <- dataset_names_boot
#Transform list into dataframe
boot_df <- ldply(boot, .id = "ID") %>%
separate(ID, c("Sample", "Boot"), sep = "_round-", remove = F) %>%
mutate(Boot = gsub("_", "", Boot))
psmc_buf_sample <- subset(psmc_buf, psmc_buf$Sample=="183195312")
ggplot() +
geom_line(data = boot_df, aes(x=YearsAgo/1000, y=Ne/100000, color=Sample, alpha=Boot)) +
geom_line(data=psmc_buf_sample, aes(x=YearsAgo/1000, y=Ne/100000, color=Sample)) +
scale_alpha_discrete(range = c(0.1, 0.1)) +
scale_color_manual(values = "#464646") +
scale_x_log10(breaks = c(10, 20, 50, 100, 200, 500, 1000, 2000)) +
scale_y_continuous(breaks = pretty_breaks(n = 10)) +
annotation_logticks(sides = "b", alpha = 0.5) +
xlab(expression(paste("Kya (g = 2, ", mu," = 1.4e-9",")"))) +
ylab(bquote('Ne x ' ~ 10^5)) +
ggtitle("S.kirtlandii 183195312") +
guides(alpha = FALSE) +
theme(legend.key = element_blank(),
legend.position = "none",
text = element_text(size = 12),
panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 1))
#Read in the bootstrap files
boot_files <- paste("/Users/abc6435/Desktop/hWROH/data/psmc_bootstrap/", list.files(path = "/Users/abc6435/Desktop/hWROH/data/psmc_bootstrap/", pattern="*round*"), sep = "")
#Set Variables
i.iteration=30
s=100
mu <- 1.4e-9
g <- 2
#Run "psmc.result" from the "plot_psmc" function
boot <- lapply(boot_files, psmc.result, i.iteration, mu = mu, s, g = g)
#Set names in psmc_buf to sample names
dataset_names_boot <-list.files(path="/Users/abc6435/Desktop/hWROH/data/psmc_bootstrap/", pattern="*round*")
dataset_names_boot <-  gsub(".psmc", "", dataset_names_boot)
names(boot) <- dataset_names_boot
#Transform list into dataframe
boot_df <- ldply(boot, .id = "ID") %>%
separate(ID, c("Sample", "Boot"), sep = "_round-", remove = F) %>%
mutate(Boot = gsub("_", "", Boot))
psmc_buf_sample <- subset(psmc_buf, psmc_buf$Sample=="183195332")
ggplot() +
geom_line(data = boot_df, aes(x=YearsAgo/1000, y=Ne/100000, color=Sample, alpha=Boot)) +
geom_line(data=psmc_buf_sample, aes(x=YearsAgo/1000, y=Ne/100000, color=Sample)) +
scale_alpha_discrete(range = c(0.1, 0.1)) +
scale_color_manual(values = "#464646") +
scale_x_log10(breaks = c(10, 20, 50, 100, 200, 500, 1000, 2000)) +
scale_y_continuous(breaks = pretty_breaks(n = 10)) +
annotation_logticks(sides = "b", alpha = 0.5) +
xlab(expression(paste("Kya (g = 2, ", mu," = 1.4e-9",")"))) +
ylab(bquote('Ne x ' ~ 10^5)) +
ggtitle("S.kirtlandii 183195332") +
guides(alpha = FALSE) +
theme(legend.key = element_blank(),
legend.position = "none",
text = element_text(size = 12),
panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill = NA, size = 1))
#Run "psmc.result" from the "plot_psmc" function
boot <- lapply(boot_files, psmc.result, i.iteration, mu = mu, s, g = g)
#Run "psmc.result" from the "plot_psmc" function
boot <- lapply(boot_files, psmc.result, i.iteration, mu = mu, s, g = g)
#Read in the bootstrap files
boot_files <- paste("/Users/abc6435/Desktop/hWROH/data/psmc_bootstrap/", list.files(path = "/Users/abc6435/Desktop/hWROH/data/psmc_bootstrap/", pattern="*round*"), sep = "")
#Set Variables
i.iteration=30
s=100
mu <- 1.4e-9
g <- 2
#Run "psmc.result" from the "plot_psmc" function
boot <- lapply(boot_files, psmc.result, i.iteration, mu = mu, s, g = g)
#Read in csv
data <- read.csv("~/Desktop/WROH/Data/SFS/kirtlandii_sfs.csv", header = FALSE, sep = ",")
data
library(stringr)
library(tibble)
library(dplyr)
library(readr)
library(tidyr)
library(ggplot2)
library(ggpattern)
library(ggsignif)
library(forcats)
library(sf)
library(reshape2)
library(ggbreak)
library(ggpubr)
#Read in csv
data <- read.csv("~/Desktop/WROH/Data/SFS/kirtlandii_sfs.csv", header = FALSE, sep = ",")
#Read in csv
data <- read.csv("~/Desktop/Calderon_et_al/WROH/Data/SFS/kirtlandii_sfs.csv", header = FALSE, sep = ",")
colnames(data) <- c('0', '1','2','3','4','5','6','7','8','9','10','MUTATION_TYPE','POP')
data
#Read in csv
data <- read.csv("~/Desktop/Calderon_et_al/WROH/Data/SFS/kirtlandii_sfs.csv", header = TRUE, sep = ",")
colnames(data) <- c('0', '1','2','3','4','5','6','7','8','9','10','MUTATION_TYPE','POP')
data
View(data)
#Read in csv
data <- read.csv("~/Desktop/WROH/Data/SFS/1D_SFS/setophaga_sfs.csv", header = TRUE, sep = ",")
#Read in csv
data <- read.csv("~/Desktop/Calderon_et_al/WROH/Data/SFS/kirtlandii_sfs.csv", header = TRUE, sep = ",")
colnames(data) <- c('0', '1','2','3','4','5','6','7','8','9','10','MUTATION_TYPE','POP')
data
#Read in csv
data <- read.csv("~/Desktop/Calderon_et_al/WROH/Data/SFS/kirtlandii_sfs.csv", header = FALSE, sep = ",")
colnames(data) <- c('0', '1','2','3','4','5','6','7','8','9','10','MUTATION_TYPE','POP')
data
#Read in csv
data <- read.csv("~/Desktop/Calderon_et_al/WROH/Data/SFS/kirtlandii_sfs.csv", header = FALSE, sep = ",")
data
data[c(2,4,6,8,10,12),]
#Read in csv
data <- read.csv("~/Desktop/Calderon_et_al/WROH/Data/SFS/kirtlandii_sfs.csv", header = FALSE, sep = ",")
data_cleaned <- data[c(2,4,6,8,10,12),]
colnames(data_cleaned) <- c('0', '1','2','3','4','5','6','7','8','9','10','11','12','MUTATION_TYPE','POP')
data_cleaned
#Read in csv
data <- read.csv("~/Desktop/Calderon_et_al/WROH/Data/SFS/kirtlandii_sfs.csv", header = FALSE, sep = ",")
data_cleaned <- data[c(2,4,6,8,10,12),]
colnames(data_cleaned) <- c('0', '1','2','3','4','5','6','7','8','9','10','11','12','13','14','MUTATION_TYPE','POP')
data_cleaned
(data_cleaned[,-15:-16]/rowSums(cit_sfs[,-15:-16]))
(data_cleaned[,-15:-16]/rowSums(data_cleaned[,-15:-16]))
data_cleaned[,-15:-16])
data_cleaned[,-15:-16]
data_cleaned[,-14:-16]
data_cleaned[,-MUTATION_TYPE:-POP]
data_cleaned[,0:14]
data_cleaned[,0:15]
sfsp <- (data_cleaned[,0:15]/rowSums(data_cleaned[,0:15]))
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/abc6435/Desktop/Calderon_et_al/WROH/data")
kirt_dp <- as.data.frame(read.table("/Users/abc6435/Desktop/Calderon_et_al/WROH/data/kirtlandii_DP.txt"))
kirt_dp = kirt_dp[,c(-2,-3)]
colnames(kirt_dp) = c("CHRM", "POS", "183195332", "183194861", "183195321", "183195304",
"183194841", "183195326", "183195312")
ggplot(kirt_dp, aes(x=kirt_dp$`183195304`)) +
geom_histogram(binwidth = 1, color="black", fill="#464646")+
xlab("Read Depth") + ylab("Frequency") + ggtitle("Kirtland_183195304") +
scale_x_continuous(limits = c(0, 45)) +
theme(axis.text.x = element_text(size = 6), axis.text.y = element_text(size = 6),
plot.title = element_text(size = 6))
library(stringr)
library(tibble)
library(dplyr)
library(readr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(ggpattern)
library(ggsignif)
library(forcats)
library(sf)
ggplot(kirt_dp, aes(x=kirt_dp$`183195304`)) +
geom_histogram(binwidth = 1, color="black", fill="#464646")+
xlab("Read Depth") + ylab("Frequency") + ggtitle("Kirtland_183195304") +
scale_x_continuous(limits = c(0, 45)) +
theme(axis.text.x = element_text(size = 6), axis.text.y = element_text(size = 6),
plot.title = element_text(size = 6))
kirt_841_hist <- ggplot(kirt_dp, aes(x=kirt_dp$`183194841`)) +
geom_histogram(binwidth = 1, color="black", fill="#464646")+
xlab("Read Depth") + ylab("Frequency") + ggtitle("Kirtland_183194841") +
scale_x_continuous(limits = c(0, 45)) +
theme(axis.text.x = element_text(size = 6), axis.text.y = element_text(size = 6),
plot.title = element_text(size = 6))
kirt_841_hist
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(readr)
library(forcats)
library(scales)
#Import Chromosome Lengths
chr_lengths <- read.delim("/Users/abc6435/Desktop/Calderon_et_al/WROH/data/ROHLengths/chr.txt", header = FALSE, sep = "\t", dec=".")
#Import ROH Lengths
roh_lengths <- read.delim("/Users/abc6435/Desktop/Calderon_et_al/WROH/data/ROHLengths/all_roh_lengths.txt", header = FALSE, sep = "\t", dec=".")
#Add Column Names
colnames(roh_lengths) <- c("SAMPLE", "CHR","XPOS", "START", "END", "CAT", "SPECIES")
colnames(chr_lengths) <- c("CHR", "START", "END")
#Factor the order of chromosomes
chr_list <- list("chr1","chr1a","chr2","chr3","chr4","chr4a","chr5","chr6","chr7","chr8",
"chr9","chr10","chr11","chr12","chr13","chr14","chr15","chr17","chr18",
"chr19","chr20","chr21","chr22","chr23","chr24","chr25","chr26","chr27",
"chr28","chr29")
#Assign Colors To Samples
sample_colors1 <- c("sample_183194841"="black", "sample_183194861"="black",
"sample_183195304"="black", "sample_183195312"="black",
"sample_183195321"="black", "sample_183195326"="black",
"sample_183195332"="black", "sample_2871"="#E5B400")
sample_colors2 <- c("sample_183194841"="#DFFF00", "sample_183194861"="#9FE2BF",
"sample_183195304"="#FFBF00", "sample_183195312"="#40E0D0",
"sample_183195321"="purple", "sample_183195326"="red",
"sample_183195332"="#6495ED", "sample_2871"="#CCCCFF")
#Assign alphas To Samples
sample_alphas <- c("sample_183194841"=0.5, "sample_183194861"=0.5,
"sample_183195304"=0.5, "sample_183195312"=0.5,
"sample_183195321"=0.5, "sample_183195326"=0.5,
"sample_183195332"=0.5, "sample_2871"=1)
ggplot(data=chr_lengths) +
geom_bar(aes(x=fct_inorder(CHR), y=END/1000000),
stat = "identity", fill="white", color="black") +
geom_rect(data = roh_lengths,
aes(xmin=XPOS-0.45, xmax=XPOS+0.45, ymin=START/1000000, ymax=END/1000000,
fill = SAMPLE, alpha=SAMPLE)) +
scale_fill_manual(values = sample_colors2) +
scale_alpha_manual(values = sample_alphas) +
scale_y_continuous(breaks=seq(0,151, by=15), labels = label_number(suffix = "Mb"),
expand = expansion(mult=c(0,0.05))) +
xlab("") + ylab("Length") +
theme(panel.background = element_blank(),
panel.border = element_rect(color = "black", fill = NA),
legend.position = c(0.8,0.3))
roh_karyotype <- ggplot(data=chr_lengths) +
geom_bar(aes(x=fct_inorder(CHR), y=END/1000000),
stat = "identity", fill="white", color="black") +
geom_rect(data = roh_lengths,
aes(xmin=XPOS-0.45, xmax=XPOS+0.45, ymin=START/1000000, ymax=END/1000000,
fill = SPECIES, alpha=SPECIES)) +
scale_fill_manual(values = c("white","#E5B400","#464646","firebrick1"),
labels = c("non-roh", "citrina", "kirtlandii", "ruticilla")) +
scale_alpha_manual(values = c(1,1,0.7,1)) +
scale_y_continuous(breaks=seq(0,151, by=15), labels = label_number(suffix = "Mb"),
expand = expansion(mult=c(0,0.05))) +
xlab("") + ylab("Length") +
theme(panel.background = element_blank(),
panel.border = element_blank(),
legend.title = element_blank(),
legend.position = c(0.85,0.25),
text = element_text(size=12),
axis.text.x=element_text(angle=90, vjust=0.5, hjust=1)) +
guides(alpha="none") +
geom_vline(xintercept = 0.4,
linetype = "solid", color = "black",
linewidth = 1.0)
roh_karyotype
ggsave("figure1.png",
plot = roh_karyotype, device = NULL,
path = "/Users/abc6435/Desktop/Calderon_et_al/Publication/FINAL_FIGURES",
scale = 1,
width = 130,
height = 130,
units = "mm",
dpi = 600)
ggsave("figure1.png",
plot = roh_karyotype, device = NULL,
path = "/Users/abc6435/Desktop/Calderon_et_al/Publication/FINAL_FIGURES",
scale = 1,
width = 150,
height = 150,
units = "mm",
dpi = 600)
ggsave("karyotype.png",
plot = roh_karyotype, device = NULL,
path = "/Users/abc6435/Desktop/Calderon_et_al/Publication/FINAL_FIGURES",
scale = 1,
width = 150,
height = 150,
units = "mm",
dpi = 600)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(ggpubr)
ids <- c(18319484, 183195312, 183195332,
183194861,183195321, 183195304, 183195326)
#Define filepath
base_bath <- "/Users/abc6435/Desktop/KROH/data/seq_stats/"
#Read files to create a named list
readlengths <- lapply(ids, function(id) {
read.delim(paste0(base_path, id, "_readlength.txt"), header = FALSE)
})
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
#Create dumby df
avg_depth_test <- data.frame(
CHR = c("chr1", "chr10", "chr11", "chr1a", "chr29", "chr9"),
DEPTH = c(73.0, 38.0, 74.0, 73.0, 38.5, 74.0)
)
avg_depth_test
#Create dumby df
avg_depth_test <- data.frame(
CHR = c("chr1", "chr10", "chr11", "chr1a", "chr29", "chr9"),
DEPTH = c(73.0, 38.0, 74.0, 73.0, 38.5, 74.0)
)
chr_order <- (c("chr1","chr1a","chr9","chr10","chr11","chr29")
avg_depth_test$CHR <- factor(avg_depth_test$CHR, levels = chr_order)
avg_depth_test$CHR
avg_depth_test$CHR <- factor(avg_depth_test$CHR, levels = chr_order)
chr_order <- (c("chr1","chr1a","chr9","chr10","chr11","chr29")
)
#Create dumby df
avg_depth_test <- data.frame(
CHR = c("chr1", "chr10", "chr11", "chr1a", "chr29", "chr9"),
DEPTH = c(73.0, 38.0, 74.0, 73.0, 38.5, 74.0)
)
chr_order <- (c("chr1","chr1a","chr9","chr10","chr11","chr29"))
avg_depth_test$CHR <- factor(avg_depth_test$CHR, levels = chr_order)
avg_depth_test$CHR
ggplot(avg_depth_183194841, aes(x = CHR, y = DEPTH)) +
geom_bar(stat = "identity", fill = "gray") +
labs(x = "",
y = "Average Depth") +
theme_minimal() +
theme(
axis.text = element_text(size=10),
axis.text.x = element_text(angle = 90),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black", fill = NA)
)
ggplot(avg_depth_test, aes(x = CHR, y = DEPTH)) +
geom_bar(stat = "identity", fill = "gray") +
labs(x = "",
y = "Average Depth") +
theme_minimal() +
theme(
axis.text = element_text(size=10),
axis.text.x = element_text(angle = 90),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black", fill = NA)
)
factor(avg_depth_test$CHR, levels = uniqe(avg_depth_test$CHR))
factor(avg_depth_test$CHR, levels = unique(avg_depth_test$CHR))
factor(avg_depth_test$CHR, levels = sort(unique(avg_depth_test$CHR)))
#Create dumby df
avg_depth_test <- data.frame(
CHR = c("chr1", "chr10", "chr11", "chr1a", "chr29", "chr9"),
DEPTH = c(73.0, 38.0, 74.0, 73.0, 38.5, 74.0)
)
chr_order <- (c("chr1","chr1a","chr9","chr10","chr11","chr29"))
avg_depth_test$CHR <- factor(avg_depth_test$CHR, levels = sort(unique(avg_depth_test$CHR)))
#Plot
ggplot(avg_depth_test, aes(x = CHR, y = DEPTH)) +
geom_bar(stat = "identity", fill = "gray") +
labs(x = "",
y = "Average Depth") +
theme_minimal() +
theme(
axis.text = element_text(size=10),
axis.text.x = element_text(angle = 90),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black", fill = NA)
)
ggplot(avg_depth_test, aes(x = CHR, y = DEPTH)) +
geom_bar(stat = "identity", fill = "gray") +
labs(x = "",
y = "Average Depth") +
theme_minimal() +
theme(
axis.text = element_text(size=10),
axis.text.x = element_text(angle = 90),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black", fill = NA)
)
sort(unique(avg_depth_test$CHR))
#Create dumby df
avg_depth_test <- data.frame(
CHR = c("chr1", "chr10", "chr11", "chr1a", "chr29", "chr9"),
DEPTH = c(73.0, 38.0, 74.0, 73.0, 38.5, 74.0)
)
avg_depth_test$CHR <- factor(avg_depth_test$CHR, levels = sort(unique(avg_depth_test$CHR)))
#Plot
ggplot(avg_depth_test, aes(x = CHR, y = DEPTH)) +
geom_bar(stat = "identity", fill = "gray") +
labs(x = "",
y = "Average Depth") +
theme_minimal() +
theme(
axis.text = element_text(size=10),
axis.text.x = element_text(angle = 90),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black", fill = NA)
)
ggplot(avg_depth_test, aes(x = CHR, y = DEPTH)) +
geom_bar(stat = "identity", fill = "gray") +
labs(x = "",
y = "Average Depth") +
theme_minimal() +
theme(
axis.text = element_text(size=10),
axis.text.x = element_text(angle = 90),
panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black", fill = NA)
)
unique(avg_depth_test$CHR))
unique(avg_depth_test$CHR)
sort(avg_depth_test$CHR)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/abc6435/Desktop/KROH/data/gone")
library(dplyr)
library(zoo)
library(ggplot2)
map <- read.table("HagenEtAlHouseSparrow.map", header = FALSE, sep = "", col.names = c("CHR","SNP","cMMb","POS"))
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/abc6435/Desktop/KROH/data/gone")
library(dplyr)
library(zoo)
library(ggplot2)
map <- read.table("HagenEtAlHouseSparrow.map", header = FALSE, sep = "", col.names = c("CHR","SNP","cMMb","POS"))
read.table("HagenEtAlHouseSparrow.map", header = FALSE, sep = "", col.names = c("CHR","SNP","cMMb","POS"))
setwd("/Users/abc6435/Desktop/KROH/data/gone")
library(dplyr)
library(zoo)
library(ggplot2)
map <- read.table("HagenEtAlHouseSparrow.map", header = FALSE, sep = "", col.names = c("CHR","SNP","cMMb","POS"))
#subset chr
chr_map <- subset(map, map$CHR==1[1:7,])
chr_map <- subset(map, map$CHR==1)[1:7,]
#Create DF of chromosome's length
chr <- data.frame(
CHR = 1,
POS = seq(1, max(chr_map$POS), 1)
)
#Merge with map data
merged <- merge(chr, chr_map, all.x = TRUE)
merged[1,"cMMb"] <- 0
#interpolate cMMb
map_int <- as.data.frame(
approx(merged$POS, merged$cMMb, method = "linear", n=nrow(merged)))
#Create a new DF with all info columns
hosp_chr_map <- as.data.frame(cbind(merged$CHR, merged$SNP, map_int$y, map_int$x))
colnames(hosp_chr_map) <- c("CHR","SNP","cMMb","POS")
View(hosp_chr_map)
View(hosp_chr_map)
tail(hosp_chr_map)
subset(map, CHR == 1)
setwd("/Users/abc6435/Desktop/KROH/data/gone")
#Read Map File
map <- read.table("HagenEtAlHouseSparrow.map", header = FALSE, sep = "", col.names = c("CHR","SNP","cMMb","POS"))
chr_map <- subset(map, CHR == 0)
library(dplyr)
library(zoo)
setwd("/Users/abc6435/Desktop/KROH/data/gone")
#Read Map File
map <- read.table("HagenEtAlHouseSparrow.map", header = FALSE, sep = "", col.names = c("CHR","SNP","cMMb","POS"))
chr_map <- subset(map, CHR == 0)
chr <- data.frame(
CHR = 1,
POS = seq(1, max(chr_map$POS), 1)
)
chr
chr <- data.frame(
CHR = 0,
POS = seq(1, max(chr_map$POS), 1)
)
#Merge with map data
merged <- merge(chr, chr_map, all.x = TRUE)
#Set first cMMb value to 0
merged[1, "cMMb"] <- 0
#interpolate cMMb, handling missing values
int_df <- as.data.frame(
approx(merged$POS, merged$cMMb, method = "linear", n=nrow(merged)))
#Create a new DF with all info columns
int_map <- data.frame(
CHR = merged$CHR,
SNP = merged$SNP,
cMMb = int_df$y,
POS = int_df$x
)
View(int_map)
View(int_map)
tail(int_map)
library(dplyr)
library(zoo)
setwd("/Users/abc6435/Desktop/KROH/data/gone")
#Read Map File
map <- read.table("HagenEtAlHouseSparrow.map", header = FALSE, sep = "", col.names = c("CHR","SNP","cMMb","POS"))
#subset the specified chromosome
chr_map <- subset(map, CHR == 0)
#Create DF of chromosome's length
chr <- data.frame(
CHR = 0,
POS = seq(1, 467554, 1)
)
merged <- merge(chr, chr_map, all.x = TRUE)
merged[1, "cMMb"] <- 0
int_df <- as.data.frame(
approx(merged$POS, merged$cMMb, method = "linear", n=nrow(merged)))
View(int_df)
View(merged)
setwd("/Users/abc6435/Desktop/KROH/data/gone")
#Read Map File
map <- read.table("HagenEtAlHouseSparrow.map", header = FALSE, sep = "", col.names = c("CHR","SNP","cMMb","POS"))
View(map)
chr_map <- subset(map, CHR == 0)
View(map)
View(chr_map)
View(chr_map)
unique(map$CHR)
chr_map_1 <- subset(map, CHR == 1)
chr_map <- subset(map, CHR == 1)
View(chr_map)
View(int_df)
