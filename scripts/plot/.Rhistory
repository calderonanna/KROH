C_T_5p_plot <- ggplot(C_T_5p, aes(x=LENGTH, y=RATE, color=SAMPLE)) +
geom_line() +
scale_color_manual(values = leg) +
scale_x_continuous(breaks = seq(1,10, by=1)) +
scale_y_continuous(breaks = seq(0.010,0.030, by=0.005),
limits = c(0.010,0.030)) +
guides(color=guide_legend(override.aes=list(fill=NA))) +
theme(panel.background = element_blank(),
panel.border = element_rect(fill=NA, color="black"),
legend.position=c(0.87,0.80),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank()) +
ylab("C>T Substitution Rate") +
xlab("Distance from 3' end (bp)")
ggarrange(G_A_3p_plot,
C_T_5p_plot,
nrow=1,
ncol = 2,
widths = c(3,3),
labels = c('A', 'B'))
#Color Leg
leg <- c("#429e9f","#42709f",
"#43429f","#72429f",
"#9f429e","#9f4270")
#Subset
G_A_3p <- subset(three_prime_m, three_prime_m$DEAM=="G>A")
#plot
G_A_3p_plot <- ggplot(G_A_3p, aes(x=LENGTH, y=RATE, color=SAMPLE)) +
geom_line() +
scale_color_manual(values = leg) +
scale_x_continuous(breaks = seq(1,10, by=1)) +
scale_y_continuous(breaks = seq(0.010,0.030, by=0.005),
limits = c(0.010,0.030)) +
guides(color=guide_legend(override.aes=list(fill=NA))) +
theme(panel.background = element_blank(),
panel.border = element_rect(fill=NA, color="black"),
legend.position=c(0.87,0.80),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank()) +
ylab("G>A Substitution Rate") +
xlab("Distance from 3' end (bp)")
#Subset
C_T_5p <- subset(five_prime_m, five_prime_m$DEAM=="C>T")
#plot
C_T_5p_plot <- ggplot(C_T_5p, aes(x=LENGTH, y=RATE, color=SAMPLE)) +
geom_line() +
scale_color_manual(values = leg) +
scale_x_continuous(breaks = seq(1,10, by=1)) +
scale_y_continuous(breaks = seq(0.010,0.030, by=0.005),
limits = c(0.010,0.030)) +
guides(color=guide_legend(override.aes=list(fill=NA))) +
theme(panel.background = element_blank(),
panel.border = element_rect(fill=NA, color="black"),
legend.position=c(0.87,0.80),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank()) +
ylab("C>T Substitution Rate") +
xlab("Distance from 5' end (bp)")
ggarrange(G_A_3p_plot,
C_T_5p_plot,
nrow=1,
ncol = 2,
widths = c(3,3),
labels = c('A', 'B'))
deam_GA_CT <- ggarrange(G_A_3p_plot,
C_T_5p_plot,
nrow=1,
ncol = 2,
widths = c(3,3),
labels = c('A', 'B'))
ggsave(filename = "deam_GA_CT.png",
plot = deam_GA_CT,
path = "/Users/annamariacalderon/Desktop/KROH/figures/",
width = 8,
height = 4,
units = "in",
dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(reshape2)
library(ggpubr)
setwd("/Users/abc6435/Desktop/KROH/data/dna_damage/")
five_prime <- read.table("5p_results.txt", header = TRUE)
three_prime <- read.table("3p_results.txt", header = TRUE)
#Fix Column Names
colnames(five_prime) <- c("TAG","SAMPLE","A>C",
"A>G","A>T","C>A","C>G",
"C>T","G>A","G>C","G>T",
"T>A","T>C","T>G")
colnames(three_prime) <- c("TAG","SAMPLE","A>C",
"A>G","A>T","C>A","C>G",
"C>T","G>A","G>C","G>T",
"T>A","T>C","T>G")
#Add Length Column
three_prime$LENGTH <- rep(1:10, times=6)
five_prime
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(reshape2)
library(ggpubr)
setwd("/Users/abc6435/Desktop/KROH/data/dna_damage/")
five_prime <- read.table("5p_results.txt", header = TRUE)
three_prime <- read.table("3p_results.txt", header = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(reshape2)
library(ggpubr)
setwd("/Users/abc6435/Desktop/KROH/data/dna_damage/")
five_prime <- read.table("5p_results.txt", header = TRUE)
three_prime <- read.table("3p_results.txt", header = TRUE)
#Fix Column Names
colnames(five_prime) <- c("TAG","SAMPLE","A>C",
"A>G","A>T","C>A","C>G",
"C>T","G>A","G>C","G>T",
"T>A","T>C","T>G")
colnames(three_prime) <- c("TAG","SAMPLE","A>C",
"A>G","A>T","C>A","C>G",
"C>T","G>A","G>C","G>T",
"T>A","T>C","T>G")
#Add Length Column
three_prime$LENGTH <- rep(1:10, times=6)
five_prime$LENGTH <- rep(1:10, times=6)
#Reformat to Long
five_prime_m <- melt(five_prime,
id.vars = c("TAG","SAMPLE","LENGTH"),
variable.name = "DEAM",
value.name = "RATE")
three_prime_m <- melt(three_prime,
id.vars = c("TAG","SAMPLE","LENGTH"),
variable.name = "DEAM",
value.name = "RATE")
#Reformat SAMPLE column
three_prime_m$SAMPLE <- as.character(three_prime_m$SAMPLE)
five_prime_m$SAMPLE <- as.character(five_prime_m$SAMPLE)
#Color Leg
leg <- c("#429e9f","#42709f",
"#43429f","#72429f",
"#9f429e","#9f4270")
#Subset
G_A_3p <- subset(three_prime_m, three_prime_m$DEAM=="G>A")
#plot
G_A_3p_plot <- ggplot(G_A_3p, aes(x=LENGTH, y=RATE, color=SAMPLE)) +
geom_line() +
scale_color_manual(values = leg) +
scale_x_continuous(breaks = seq(1,10, by=1)) +
scale_y_continuous(breaks = seq(0.010,0.030, by=0.005),
limits = c(0.010,0.030)) +
guides(color=guide_legend(override.aes=list(fill=NA))) +
theme(panel.background = element_blank(),
panel.border = element_rect(fill=NA, color="black"),
legend.position=c(0.87,0.80),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank()) +
ylab("G>A Substitution Rate") +
xlab("Distance from 3' end (bp)")
#Subset
C_T_5p <- subset(five_prime_m, five_prime_m$DEAM=="C>T")
#plot
C_T_5p_plot <- ggplot(C_T_5p, aes(x=LENGTH, y=RATE, color=SAMPLE)) +
geom_line() +
scale_color_manual(values = leg) +
scale_x_continuous(breaks = seq(1,10, by=1)) +
scale_y_continuous(breaks = seq(0.010,0.030, by=0.005),
limits = c(0.010,0.030)) +
guides(color=guide_legend(override.aes=list(fill=NA))) +
theme(panel.background = element_blank(),
panel.border = element_rect(fill=NA, color="black"),
legend.position=c(0.87,0.80),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_blank()) +
ylab("C>T Substitution Rate") +
xlab("Distance from 5' end (bp)")
deam_GA_CT <- ggarrange(G_A_3p_plot,
C_T_5p_plot,
nrow=1,
ncol = 2,
widths = c(3,3),
labels = c('A', 'B'))
ggsave(filename = "deam_GA_CT.png",
plot = deam_GA_CT,
path = "/Users/annamariacalderon/Desktop/KROH/figures/",
width = 8,
height = 4,
units = "in",
dpi = 300)
deam_GA_CT <- ggarrange(G_A_3p_plot,
C_T_5p_plot,
nrow=1,
ncol = 2,
widths = c(3,3),
labels = c('A', 'B'))
ggsave(filename = "deam_GA_CT.png",
plot = deam_GA_CT,
path = "/Users/abc6435/Desktop/KROH/figures/",
width = 8,
height = 4,
units = "in",
dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
setwd("/Users/abc6435/Desktop/KROH/data/smc++/")
#Bootstraps
bootstrap_df <- as.data.frame(read.delim("bootstrap_results.txt",
sep = '\t',
header = FALSE,
col.names = c("TimePoint", "GenAgo","Ne","rep")))
#Genome-Wide Ne Estimates
cKIWA_Ne_data <- read.csv("plot.csv")
#Average Generations Across Reps
gen <- reshape(bootstrap_df,
idvar="TimePoint",
v.names = "GenAgo",
timevar = "rep",
direction="wide")
gen <- gen[,c(-1,-2)]
avg_gen <- rowMeans(gen)
#Calculate 5th and 95th% across reps
ne <- reshape(bootstrap_df,
idvar="TimePoint",
v.names = "Ne",
timevar = "rep",
direction="wide")
ne <- ne[,c(-1,-2)]
quant_ne <- t(apply(ne, 1, quantile, probs = c(0.05, 0.95), na.rm = TRUE))
#Bind Dataset
bootstrap_quant <- as.data.frame(cbind(avg_gen, quant_ne))
bootstrap_quant$YearsAgo <- bootstrap_quant[,'avg_gen']*2
colnames(bootstrap_quant) <- c("avg_gen", "fifth", "ninety_fifth", "YearsAgo")
bootstrap_quant <- bootstrap_quant[,-1]
#Genome-Wide
colnames(cKIWA_Ne_data) <- c("Pop", "GenerationsAgo", "Ne", "plot_type", "plot_num")
cKIWA_Ne_data$YearsAgo <- cKIWA_Ne_data[,'GenerationsAgo']*2
cKIWA_Ne <- cKIWA_Ne_data[,c('YearsAgo', "Ne")]
# Compute LOESS smooth for both 'fifth' and 'ninety_fifth'
loess_fifth <- loess(fifth ~ YearsAgo, data = bootstrap_quant, span = 0.25)
loess_ninety_fifth <- loess(ninety_fifth ~ YearsAgo, data = bootstrap_quant, span = 0.25)
# Create a new data frame with the smoothed values
smooth_boots_df <- data.frame(
YearsAgo = bootstrap_quant$YearsAgo,
fifth_smooth = predict(loess_fifth),
ninety_fifth_smooth = predict(loess_ninety_fifth)
)
# Compute LOESS smooth for Ne
loess_Ne <- loess(Ne ~ YearsAgo, data = cKIWA_Ne, span = 0.25)
# Create a new data frame with the smoothed values
smooth_ne_df <- data.frame(
YearsAgo = cKIWA_Ne$YearsAgo,
Ne_smooth = predict(loess_Ne))
ggplot(smooth_boots_df, aes(x = YearsAgo/1000)) +
geom_line(data = smooth_ne_df,
aes(x = YearsAgo/1000, y = Ne_smooth/1000),
color = "red",
size = 1.2) +
geom_ribbon(aes(ymin = fifth_smooth/1000, ymax = ninety_fifth_smooth/1000),
fill = "blue",
alpha = 0.3) +
scale_x_continuous(limits = c(0,180),
breaks = seq(0,180, by=20),
expand = c(0,0)) +
scale_y_continuous(limits = c(0,350),
breaks = seq(0,350, by=50)) +
geom_point(data = bootstrap_quant,
aes(x = YearsAgo/1000, y = fifth/1000),
color = "blue", alpha = 0.5, size=0.35) +
geom_point(data = bootstrap_quant,
aes(x = YearsAgo/1000, y = ninety_fifth/1000),
color = "blue", alpha = 0.5, size=0.35) +
geom_point(data = cKIWA_Ne,
aes(x = YearsAgo/1000, y = Ne/1000),
color = "red", alpha = 0.5, size=0.35) +
theme(panel.background = element_blank(),
panel.border = element_rect(fill=NA, color="black")) +
labs(x = "Years Ago (Kya)",
y = expression(italic(N[e] * 10^3)))
ggplot(smooth_boots_df, aes(x = YearsAgo/1000)) +
geom_line(data = smooth_ne_df,
aes(x = YearsAgo/1000, y = Ne_smooth/1000),
color = "red",
size = 1.2) +
geom_ribbon(aes(ymin = fifth_smooth/1000, ymax = ninety_fifth_smooth/1000),
fill = "blue",
alpha = 0.3) +
scale_x_continuous(limits = c(0,180),
breaks = seq(0,180, by=20),
expand = c(0,0)) +
scale_y_continuous(limits = c(0,350),
breaks = seq(0,350, by=50)) +
#geom_point(data = bootstrap_quant,
#aes(x = YearsAgo/1000, y = fifth/1000),
#color = "blue", alpha = 0.5, size=0.35) +
#geom_point(data = bootstrap_quant,
#aes(x = YearsAgo/1000, y = ninety_fifth/1000),
#color = "blue", alpha = 0.5, size=0.35) +
#geom_point(data = cKIWA_Ne,
#aes(x = YearsAgo/1000, y = Ne/1000),
# color = "red", alpha = 0.5, size=0.35) +
theme(panel.background = element_blank(),
panel.border = element_rect(fill=NA, color="black")) +
labs(x = "Years Ago (Kya)",
y = expression(italic(N[e] * 10^3)))
ggsave("smcpp_plot.png",
plot = smcpp_plot,
path = "/Users/abc6435/Desktop/KROH/figures/",
units = "in",
width = 4,
height = 4,
dpi = 300)
# Plot the data
smcpp_plot <- ggplot(smooth_boots_df, aes(x = YearsAgo/1000)) +
geom_line(data = smooth_ne_df,
aes(x = YearsAgo/1000, y = Ne_smooth/1000),
color = "red",
size = 1.2) +
geom_ribbon(aes(ymin = fifth_smooth/1000, ymax = ninety_fifth_smooth/1000),
fill = "blue",
alpha = 0.3) +
scale_x_continuous(limits = c(0,180),
breaks = seq(0,180, by=20),
expand = c(0,0)) +
scale_y_continuous(limits = c(0,350),
breaks = seq(0,350, by=50)) +
#geom_point(data = bootstrap_quant,
#aes(x = YearsAgo/1000, y = fifth/1000),
#color = "blue", alpha = 0.5, size=0.35) +
#geom_point(data = bootstrap_quant,
#aes(x = YearsAgo/1000, y = ninety_fifth/1000),
#color = "blue", alpha = 0.5, size=0.35) +
#geom_point(data = cKIWA_Ne,
#aes(x = YearsAgo/1000, y = Ne/1000),
# color = "red", alpha = 0.5, size=0.35) +
theme(panel.background = element_blank(),
panel.border = element_rect(fill=NA, color="black")) +
labs(x = "Years Ago (Kya)",
y = expression(italic(N[e] * 10^3)))
#Save
ggsave("smcpp_plot.png",
plot = smcpp_plot,
path = "/Users/abc6435/Desktop/KROH/figures/",
units = "in",
width = 4,
height = 4,
dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(tidyr)
setwd("/Users/abc6435/Desktop/KROH/data/smc++/")
#Bootstraps
bootstrap_df <- as.data.frame(read.delim("bootstrap_results.txt",
sep = '\t',
header = FALSE,
col.names = c("TimePoint", "GenAgo","Ne","rep")))
#Genome-Wide Ne Estimates
cKIWA_Ne_data <- read.csv("plot.csv")
#Average Generations Across Reps
gen <- reshape(bootstrap_df,
idvar="TimePoint",
v.names = "GenAgo",
timevar = "rep",
direction="wide")
gen <- gen[,c(-1,-2)]
avg_gen <- rowMeans(gen)
#Calculate 5th and 95th% across reps
ne <- reshape(bootstrap_df,
idvar="TimePoint",
v.names = "Ne",
timevar = "rep",
direction="wide")
ne <- ne[,c(-1,-2)]
quant_ne <- t(apply(ne, 1, quantile, probs = c(0.05, 0.95), na.rm = TRUE))
#Bind Dataset
bootstrap_quant <- as.data.frame(cbind(avg_gen, quant_ne))
bootstrap_quant$YearsAgo <- bootstrap_quant[,'avg_gen']*2
colnames(bootstrap_quant) <- c("avg_gen", "fifth", "ninety_fifth", "YearsAgo")
bootstrap_quant <- bootstrap_quant[,-1]
#Genome-Wide
colnames(cKIWA_Ne_data) <- c("Pop", "GenerationsAgo", "Ne", "plot_type", "plot_num")
cKIWA_Ne_data$YearsAgo <- cKIWA_Ne_data[,'GenerationsAgo']*2
cKIWA_Ne <- cKIWA_Ne_data[,c('YearsAgo', "Ne")]
# Compute LOESS smooth for both 'fifth' and 'ninety_fifth'
loess_fifth <- loess(fifth ~ YearsAgo, data = bootstrap_quant, span = 0.25)
loess_ninety_fifth <- loess(ninety_fifth ~ YearsAgo, data = bootstrap_quant, span = 0.25)
# Create a new data frame with the smoothed values
smooth_boots_df <- data.frame(
YearsAgo = bootstrap_quant$YearsAgo,
fifth_smooth = predict(loess_fifth),
ninety_fifth_smooth = predict(loess_ninety_fifth)
)
# Compute LOESS smooth for Ne
loess_Ne <- loess(Ne ~ YearsAgo, data = cKIWA_Ne, span = 0.25)
# Create a new data frame with the smoothed values
smooth_ne_df <- data.frame(
YearsAgo = cKIWA_Ne$YearsAgo,
Ne_smooth = predict(loess_Ne))
# Plot the data
smcpp_plot <- ggplot(smooth_boots_df, aes(x = YearsAgo/1000)) +
geom_line(data = smooth_ne_df,
aes(x = YearsAgo/1000, y = Ne_smooth/1000),
color = "red",
size = 1.2) +
geom_ribbon(aes(ymin = fifth_smooth/1000, ymax = ninety_fifth_smooth/1000),
fill = "blue",
alpha = 0.3) +
scale_x_continuous(limits = c(0,160),
breaks = seq(0,160, by=20),
expand = c(0,0)) +
scale_y_continuous(limits = c(0,350),
breaks = seq(0,350, by=50)) +
#geom_point(data = bootstrap_quant,
#aes(x = YearsAgo/1000, y = fifth/1000),
#color = "blue", alpha = 0.5, size=0.35) +
#geom_point(data = bootstrap_quant,
#aes(x = YearsAgo/1000, y = ninety_fifth/1000),
#color = "blue", alpha = 0.5, size=0.35) +
#geom_point(data = cKIWA_Ne,
#aes(x = YearsAgo/1000, y = Ne/1000),
# color = "red", alpha = 0.5, size=0.35) +
theme(panel.background = element_blank(),
panel.border = element_rect(fill=NA, color="black")) +
labs(x = "Years Ago (Kya)",
y = expression(italic(N[e] * 10^3)))
#Save
ggsave("smcpp_plot.png",
plot = smcpp_plot,
path = "/Users/abc6435/Desktop/KROH/figures/",
units = "in",
width = 4,
height = 4,
dpi = 300)
# Plot the data
smcpp_plot <- ggplot(smooth_boots_df, aes(x = YearsAgo/1000)) +
geom_line(data = smooth_ne_df,
aes(x = YearsAgo/1000, y = Ne_smooth/1000),
color = "red",
linewidth = 1.2) +
geom_ribbon(aes(ymin = fifth_smooth/1000, ymax = ninety_fifth_smooth/1000),
fill = "blue",
alpha = 0.3) +
scale_x_continuous(limits = c(0,160),
breaks = seq(0,160, by=20),
expand = c(0,0)) +
scale_y_continuous(limits = c(0,350),
breaks = seq(0,350, by=50)) +
#geom_point(data = bootstrap_quant,
#aes(x = YearsAgo/1000, y = fifth/1000),
#color = "blue", alpha = 0.5, size=0.35) +
#geom_point(data = bootstrap_quant,
#aes(x = YearsAgo/1000, y = ninety_fifth/1000),
#color = "blue", alpha = 0.5, size=0.35) +
#geom_point(data = cKIWA_Ne,
#aes(x = YearsAgo/1000, y = Ne/1000),
# color = "red", alpha = 0.5, size=0.35) +
theme(panel.background = element_blank(),
panel.border = element_rect(fill=NA, color="black")) +
labs(x = "Years Ago (Kya)",
y = expression(italic(N[e] * 10^3)))
#Save
ggsave("smcpp_plot.png",
plot = smcpp_plot,
path = "/Users/abc6435/Desktop/KROH/figures/",
units = "in",
width = 4,
height = 4,
dpi = 300)
# Plot the data
smcpp_plot <- ggplot(smooth_boots_df, aes(x = YearsAgo/1000)) +
geom_line(data = smooth_ne_df,
aes(x = YearsAgo/1000, y = Ne_smooth/1000),
color = "red",
linewidth = 1.2) +
geom_ribbon(aes(ymin = fifth_smooth/1000, ymax = ninety_fifth_smooth/1000),
fill = "blue",
alpha = 0.3) +
scale_x_continuous(limits = c(0,180),
breaks = seq(0,160, by=20),
expand = c(0,0)) +
scale_y_continuous(limits = c(0,350),
breaks = seq(0,350, by=50)) +
#geom_point(data = bootstrap_quant,
#aes(x = YearsAgo/1000, y = fifth/1000),
#color = "blue", alpha = 0.5, size=0.35) +
#geom_point(data = bootstrap_quant,
#aes(x = YearsAgo/1000, y = ninety_fifth/1000),
#color = "blue", alpha = 0.5, size=0.35) +
#geom_point(data = cKIWA_Ne,
#aes(x = YearsAgo/1000, y = Ne/1000),
# color = "red", alpha = 0.5, size=0.35) +
theme(panel.background = element_blank(),
panel.border = element_rect(fill=NA, color="black")) +
labs(x = "Years Ago (Kya)",
y = expression(italic(N[e] * 10^3)))
#Save
ggsave("smcpp_plot.png",
plot = smcpp_plot,
path = "/Users/abc6435/Desktop/KROH/figures/",
units = "in",
width = 4,
height = 4,
dpi = 300)
